function [root, iterations, all_x] = regula_falsi(f, a, b, tol, max_iter)
% REGULA_FALSI Знаходження кореня рівняння методом регула-фалсі
%
% Опис методу:
% Метод регула-фалсі (метод хибного положення) - це модифікація методу бісекції,
% де замість середньої точки відрізка, ми знаходимо точку перетину
% хорди (прямої, що з'єднує точки (a,f(a)) та (b,f(b))) з віссю абсцис.
% Це дає швидшу збіжність, ніж метод бісекції, особливо коли функція близька 
% до лінійної.
%
% Вхідні параметри:
%   f       - функція, корінь якої шукаємо
%   a, b    - кінці початкового відрізку (f(a)*f(b) < 0)
%   tol     - допустима похибка
%   max_iter - максимальна кількість ітерацій
%
% Вихідні параметри:
%   root        - знайдений корінь
%   iterations  - кількість ітерацій
%   all_x       - усі наближення, отримані в процесі роботи методу

% Перевірка умови сходимості
if f(a)*f(b) >= 0
    error('Функція повинна мати різні знаки на кінцях відрізку [a,b]');
end

% Ініціалізація
iterations = 0;
all_x = [];

% Основний цикл
while iterations < max_iter
    % Обчислення точки перетину хорди з віссю OX
    c = (a*f(b) - b*f(a)) / (f(b) - f(a));
    all_x = [all_x; c];
    
    % Перевірка точності
    if abs(f(c)) < tol || abs(b - a) < tol
        root = c;
        iterations = iterations + 1;
        return;
    end
    
    % Вибір нового відрізку
    if f(a) * f(c) < 0
        b = c;
    else
        a = c;
    end
    
    iterations = iterations + 1;
end

% Повернення результату (останнє обчислене наближення)
root = c;
end

% Приклад використання:
% f = @(x) x^3 - x - 2;  % Функція f(x) = x^3 - x - 2
% [root, iter, all_x] = regula_falsi(f, 1, 2, 1e-6, 100);
% disp(['Корінь: ', num2str(root)]);
% disp(['Кількість ітерацій: ', num2str(iter)]); 