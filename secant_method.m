function [root, iterations, all_x] = secant_method(f, x0, x1, tol, max_iter)
% SECANT_METHOD Знаходження кореня рівняння методом січних
%
% Опис методу:
% Метод січних - це ітераційний метод пошуку коренів, який є модифікацією методу
% Ньютона, де похідна замінюється її скінченно-різницевим наближенням. 
% Метод не потребує обчислення похідної, але вимагає два початкових наближення.
% Точка перетину січної з віссю Ox є наступним наближенням до кореня.
%
% Вхідні параметри:
%   f        - функція, корінь якої шукаємо
%   x0, x1   - два початкових наближення
%   tol      - допустима похибка
%   max_iter - максимальна кількість ітерацій
%
% Вихідні параметри:
%   root        - знайдений корінь
%   iterations  - кількість ітерацій
%   all_x       - усі наближення, отримані в процесі роботи методу

% Ініціалізація
iterations = 0;
all_x = [x0; x1];

% Основний цикл
while iterations < max_iter
    % Обчислення наступного наближення
    f_x0 = f(x0);
    f_x1 = f(x1);
    
    % Перевірка на ділення на нуль
    if abs(f_x1 - f_x0) < eps
        warning('Ділення на дуже мале число. Метод може розбігатися.');
        break;
    end
    
    % Формула методу січних
    x2 = x1 - f_x1 * (x1 - x0) / (f_x1 - f_x0);
    all_x = [all_x; x2];
    
    % Перевірка точності
    if abs(x2 - x1) < tol || abs(f(x2)) < tol
        root = x2;
        iterations = iterations + 2; % Врахування початкових наближень
        return;
    end
    
    % Підготовка до наступної ітерації
    x0 = x1;
    x1 = x2;
    iterations = iterations + 1;
end

% Якщо досягнуто максимальної кількості ітерацій
root = x1;
iterations = iterations + 2; % Врахування початкових наближень
end

% Приклад використання:
% f = @(x) x^3 - x - 2;  % Функція f(x) = x^3 - x - 2
% [root, iter, all_x] = secant_method(f, 1, 1.5, 1e-6, 100);
% disp(['Корінь: ', num2str(root)]);
% disp(['Кількість ітерацій: ', num2str(iter)]); 